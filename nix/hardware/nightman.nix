# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ 
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usb_storage" "usbhid" "sd_mod" "uas" "ehci_pci" "sdhci_pci" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.kernelParams = ["amd_iommu=on"];
  boot.extraModulePackages = [ ];
  boot.extraModprobeConfig = "options kvm_amd nested=1";

  # keep disabled, nvidia drivers are 3rd party so not always available on latest kernel
  #boot.kernelPackages = pkgs.linuxPackages_latest;

  hardware.enableAllFirmware = true;

  hardware.bluetooth = {
    enable = true;
    powerOnBoot = true;
    settings = {
      General = {
        Experimental = true;
        Enable = "Source,Sink,Media,Socket";
      };
    };
  };  

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/603ae445-1c73-4137-b784-a824eeb895d7";
      fsType = "btrfs";
      options = [ "subvol=@" ];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/9C92-FD41";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  fileSystems."/media/sdelcore/store" = {
    device = "/dev/disk/by-uuid/6a9dc668-da63-42fa-bf57-97b4cdef6e6a";
    fsType = "ext4";
    options = ["nofail" "x-gvfs-show" "nodev" "nosuid"];
  };

  fileSystems."/opt/vmpool" = {
    device = "/dev/disk/by-uuid/b7196fe7-51dc-4fe8-8abb-131b0013049b";
    fsType = "ext4";
    options = ["nofail" "x-gvfs-show" "nodev" "nosuid"];
  };

  fileSystems."/media/sdelcore/data" = {
    device = "/dev/disk/by-uuid/f0f9b731-7a0a-419f-a28e-b0d16ed53c3f";
    fsType = "ext4";
    options = ["nofail" "x-gvfs-show" "nodev" "nosuid"];
  };
  
  fileSystems."/media/sdelcore/data2" = {
    device = "/dev/disk/by-uuid/c883ccd5-6644-4eab-8fca-293bcfc4c06a";
    fsType = "ext4";
    options = ["nofail" "x-gvfs-show" "nodev" "nosuid"];
  };

  swapDevices = [ {
    device = "/media/sdelcore/store/swapfile";
    size = 600*1024;
  } ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp11s0.useDHCP = lib.mkDefault true;

  networking.bridges = {
    "virbr0" = {
      interfaces = [ "eno1" ];
    };
  };

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

}
